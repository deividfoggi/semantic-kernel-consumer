apiVersion: v1
kind: Namespace
metadata:
  name: semantic-kernel-consumer
  labels:
    app: semantic-kernel-consumer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: semantic-kernel-consumer
  namespace: semantic-kernel-consumer
  labels:
    app: semantic-kernel-consumer
    version: "0.1"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: semantic-kernel-consumer
  template:
    metadata:
      labels:
        app: semantic-kernel-consumer
        version: "0.1"
    spec:
      serviceAccountName: semantic-kernel-consumer-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: semantic-kernel-consumer
        image: genaigateway.azurecr.io/semantic-kernel-consumer:0.1
        imagePullPolicy: IfNotPresent
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: PYTHONDONTWRITEBYTECODE
          value: "1"
        - name: SHUTDOWN_TIMEOUT
          value: "30"
        # Azure Service Bus Configuration
        - name: AZURE_SERVICE_BUS_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: azure-secrets
              key: service-bus-connection-string
        # Azure Storage Configuration
        - name: AZURE_STORAGE_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: azure-secrets
              key: storage-connection-string
        # Azure OpenAI Configuration
        - name: AZURE_OPENAI_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: azure-config
              key: openai-endpoint
        - name: AZURE_OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: azure-secrets
              key: openai-api-key
        # Managed Identity (if using Azure Workload Identity)
        - name: AZURE_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: azure-config
              key: client-id
              optional: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        - name: app-tmp
          mountPath: /app/tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: app-logs
        emptyDir: {}
      - name: app-tmp
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "kubernetes.azure.com/scalesetpriority"
        operator: "Equal"
        value: "spot"
        effect: "NoSchedule"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: semantic-kernel-consumer-sa
  namespace: semantic-kernel-consumer
  labels:
    app: semantic-kernel-consumer
  annotations:
    # Uncomment and configure if using Azure Workload Identity
    # azure.workload.identity/client-id: "your-managed-identity-client-id"
automountServiceAccountToken: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: azure-config
  namespace: semantic-kernel-consumer
  labels:
    app: semantic-kernel-consumer
data:
  openai-endpoint: "https://your-openai-resource.openai.azure.com/"
  client-id: "your-managed-identity-client-id"
---
apiVersion: v1
kind: Secret
metadata:
  name: azure-secrets
  namespace: semantic-kernel-consumer
  labels:
    app: semantic-kernel-consumer
type: Opaque
data:
  # Base64 encoded values - replace with your actual encoded secrets
  service-bus-connection-string: "RW5kcG9pbnQ9c2I6Ly95b3VyLXNlcnZpY2UtYnVzLm5hbWVzcGFjZS53aW5kb3dzLm5ldC8="
  storage-connection-string: "RGVmYXVsdEVuZHBvaW50c1Byb3RvY29sPWh0dHBzO0FjY291bnROYW1lPXlvdXJzdG9yYWdlYWNjb3VudA=="
  openai-api-key: "eW91ci1vcGVuYWktYXBpLWtleQ=="
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: semantic-kernel-consumer-netpol
  namespace: semantic-kernel-consumer
spec:
  podSelector:
    matchLabels:
      app: semantic-kernel-consumer
  policyTypes:
  - Egress
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 443  # HTTPS for Azure services
    - protocol: TCP
      port: 5671 # Service Bus AMQP over SSL
    - protocol: TCP
      port: 5672 # Service Bus AMQP
    - protocol: TCP
      port: 53   # DNS
    - protocol: UDP
      port: 53   # DNS
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: semantic-kernel-consumer-pdb
  namespace: semantic-kernel-consumer
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: semantic-kernel-consumer
